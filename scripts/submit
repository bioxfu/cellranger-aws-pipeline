#!/usr/bin/env bash

# A script for invoking the AWS Lambda function that submits the
# various batch jobs pertaining to an experiment. Intended to be run
# locally.

set -eo pipefail

usage() {
  cat <<-EOF
usage: $0 CONFIGYAML
EOF
}

payload() {
  local config_yaml_filename
  config_yaml_filename="$1"
  cat "$config_yaml_filename" \
    | python -c "import json; import sys; import yaml;
config_data = yaml.load(sys.stdin.read())
json_payload = json.dumps({'configuration': config_data})
print(f\"{json_payload}\")"
}

validate_schema() {
  python -c "from jsonschema import validate; import json; import sys; import yaml;
config_data = yaml.load(sys.stdin.read())
json_schema = json.load(open('config_schema.json'))
validate(config_data, json_schema)"
}

main() {
  local config_yaml_filename

  if [[ -z "$1" ]]; then
    usage
    exit 1
  fi

  config_yaml_filename="$1"

  # fix this
  # validate_schema < "$config_yaml_filename"

  # FIXME: lambda function accepts json, not yaml
  payload "$config_yaml_filename" | ./scripts/lambda_function.py

  # aws lambda invoke \
  #     --function-name "test-cellranger-pipeline-submit" \
  #     --log-type "Tail" \
  #     --payload "$(payload "$config_yaml_filename")" \
  #     -
}

main "$@"
